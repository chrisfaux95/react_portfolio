{"version":3,"sources":["components/LinkBtn.js","pages/About.js","components/PortfolioCard.js","pages/Portfolio.js","components/Navbar.js","components/Footer.js","components/Wrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["LinkBtn","props","className","href","src","name","Contact","process","alt","PortfolioCard","CardImg","item","CardBody","CardFooter","image","description","links","map","i","Portfolio","id","works","Navbar","homeRoute","to","Footer","Wrapper","children","App","basename","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2jGAEe,SAASA,EAAQC,GAC5B,OACI,uBAAGC,UAAW,gBAAkBD,EAAMC,UAAWC,KAAMF,EAAMG,KACxDH,EAAMI,MCFJ,SAASC,IACpB,OACI,yBAAKJ,UAAU,kCACX,6BACI,yBAAKA,UAAU,eACX,yCACA,8BAEJ,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,YACX,yBACIE,IAAG,UAAKG,mBAAL,2BAAsDC,IAAI,aAAaN,UAAU,mBAG5F,yBAAKA,UAAU,iBACX,uMAIA,2DAGA,2BACI,kBAACF,EAAD,CAASI,IAAI,iCAAiCC,KAAK,WACnD,kBAACL,EAAD,CAASI,IAAI,gDAAgDC,KAAK,kBCxB/E,SAASI,EAAcR,GAClC,OACI,yBAAKC,UAAU,YACX,yBAAKA,UAAU,QACX,kBAACQ,EAAD,CAASC,KAAMV,EAAMU,OACrB,kBAACC,EAAD,CAAUD,KAAMV,EAAMU,OACtB,kBAACE,EAAD,CAAYF,KAAMV,EAAMU,SAMxC,SAASD,EAAQT,GAEb,OACI,yBAAKC,UAAU,eACXM,IAAKP,EAAMU,KAAKN,KAChBD,IAAG,UAAKG,mBAAL,0BAA6CN,EAAMU,KAAKG,MAAMV,OAK7E,SAASQ,EAASX,GACd,OACI,yBAAKC,UAAU,aACX,wBAAIA,UAAU,cAAcD,EAAMU,KAAKN,MACvC,2BAAIJ,EAAMU,KAAKI,cAK3B,SAASF,EAAWZ,GAChB,OACI,yBAAKC,UAAU,eACVD,EAAMU,KAAKK,MAAMC,KAAI,SAAAC,GAClB,OAAQ,kBAAClB,EAAD,CACJK,KAAMa,EAAEb,KACRD,IAAKc,EAAEd,U,YCpCZ,SAASe,IACpB,OACI,0BAAMjB,UAAU,uCAIZ,yBAAKA,UAAU,+BAGX,yBAAKA,UAAU,aACX,yCACA,+BAGR,yBAAKkB,GAAG,YAAYlB,UAAU,8CACzBmB,EAAMJ,KAAI,SAACN,GAAD,OAAU,kBAACF,EAAD,CAAeE,KAAMA,SChB3C,SAASW,EAAT,GAA+B,EAAbC,UAC7B,OACI,yBAAKrB,UAAU,+DAMX,kBAAC,IAAD,CAAMA,UAAU,uBACZsB,GAAG,KADP,cAIA,wBAAItB,UAAU,sCACV,wBAAIA,UAAU,iBACV,kBAAC,IAAD,CAAMA,UAAU,wBAAwBsB,GAAG,KAA3C,aAEJ,wBAAItB,UAAU,iBACV,kBAAC,IAAD,CAAMA,UAAU,wBAAwBsB,GAAG,aAA3C,gBClBL,SAASC,IACpB,OACI,4BAAQvB,UAAU,8CAKd,6BACA,sD,MCHGwB,MAJf,SAAiBzB,GACf,OAAO,0BAAMC,UAAU,WAAWD,EAAM0B,W,MC2B3BC,MAtBf,WACI,OACI,kBAAC,IAAD,CAAQC,SAAS,oBACb,kBAAC,EAAD,KACI,kBAACP,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIQ,OAAK,EAACC,KAAK,IACXC,OAAQ,kBAAM,kBAAC,EAAD,SAElB,kBAAC,IAAD,CACIF,OAAK,EAACC,KAAK,aACXC,OAAQ,kBAAM,kBAACb,EAAD,WAK1B,kBAACM,EAAD,QCdQQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.06b274c0.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function LinkBtn(props) {\n    return (\n        <a className={\"btn btn-dark \" + props.className} href={props.src}>\n            {props.name}\n        </a>\n    )\n}","import React from 'react';\nimport LinkBtn from '../components/LinkBtn';\n\nexport default function Contact() {\n    return (\n        <div className=\"container mx-auto my-5 rounded\">\n            <div>\n                <div className=\"page-header\">\n                    <h1>About Me:</h1>\n                    <hr />\n                </div>\n                <div className=\"row py-4 mx-1\">\n                    <div className=\"col-md-3\">\n                        <img\n                            src={`${process.env.PUBLIC_URL}/assets/images/self.jpg`} alt=\"Chris Faux\" className=\"img-thumbnail\" />\n\n                    </div>\n                    <div className=\"col-md-8 mr-1\">\n                        <p>\n                            Chris Faux: A 25 year old programmer living in the Baltimore area. Knowledgable in HTML, CSS,\n                            Javascript, Java, and Python.  Has experience with both MYSQL and MongoDB.\n                        </p>\n                        <p>\n                            Email: chrisfaux95@gmail.com\n                        </p>\n                        <p>\n                            <LinkBtn src=\"https://github.com/chrisfaux95\" name=\"Github\" />\n                            <LinkBtn src=\"https://www.linkedin.com/in/christopher-faux/\" name=\"LinkedIn\" />\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport LinkBtn from './LinkBtn';\n\nexport default function PortfolioCard(props) {\n    return (\n        <div className=\"col py-1\">\n            <div className=\"card\">\n                <CardImg item={props.item} />\n                <CardBody item={props.item} />\n                <CardFooter item={props.item} />\n            </div>\n        </div>\n    )\n}\n\nfunction CardImg(props) {\n    // console.log(props.item.image.src)\n    return (\n        <img className=\"card-img-top\"\n            alt={props.item.name}\n            src={`${process.env.PUBLIC_URL}/assets/images/${props.item.image.src}`}\n        />\n    )\n}\n\nfunction CardBody(props) {\n    return (\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{props.item.name}</h5>\n            <p>{props.item.description}</p>\n        </div>\n    )\n}\n\nfunction CardFooter(props) {\n    return (\n        <div className=\"card-footer\">\n            {props.item.links.map(i => {\n                return (<LinkBtn\n                    name={i.name}\n                    src={i.src} />)\n            })}\n        </div>\n    )\n}","import React from 'react';\nimport PortfolioCard from '../components/PortfolioCard';\nimport works from '../util/portfolio_list.json';\n\nexport default function Portfolio() {\n    return (\n        <main className=\"container\n                mx-auto\n                my-5 py-2\n                rounded\">\n            <div className=\"row\n                    text-center\n                    page-header\">\n                <div className=\"col-md-12\">\n                    <h1>Portfolio</h1>\n                    <hr />\n                </div>\n            </div>\n            <div id=\"portfolio\" className=\"row row-cols-1 row-cols-md-2 row-cols-lg-3\">\n                {works.map((item) => <PortfolioCard item={item} />)}\n            </div>\n        </main>\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar({ homeRoute }) {\n    return (\n        <nav className=\"mb-1\n                navbar\n                navbar-expand\n                navbar-dark\n                bg-primary\n                sticky-top\">\n            <Link className=\"navbar-brand mb-1 h1\"\n                to=\"/\">\n                Chris Faux\n            </Link>\n            <ul className=\"navbar-nav navbar-right ml-md-auto\">\n                <li className=\"nav-item mx-1\">\n                    <Link className=\"nav-link btn btn-dark\" to=\"/\">About Me</Link>\n                </li>\n                <li className=\"nav-item mx-1\">\n                    <Link className=\"nav-link btn btn-dark\" to=\"portfolio\">Portfolio</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}","import React from 'react';\n\nexport default function Footer() {\n    return (\n        <footer className=\"footer\n                    py-2\n                   bg-dark\n                   text-light\n                   text-center\">\n            <br />\n            <p>\n                &copy;2020 - Chris Faux.\n            </p>\n        </footer>\n    )\n}","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\">{props.children}</main>;\n}\n\nexport default Wrapper;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from './pages/About';\nimport Portfolio from './pages/Portfolio';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Wrapper from './components/Wrapper'\nimport './App.css';\n\nfunction App() {\n    return (\n        <Router basename=\"/react_portfolio\">\n            <Wrapper>\n                <Navbar />\n                <Switch>\n                    <Route\n                        exact path=\"/\"\n                        render={() => <About />}\n                    />\n                    <Route\n                        exact path=\"/portfolio\"\n                        render={() => <Portfolio />}\n                    />\n\n                </Switch>\n            </Wrapper>\n            <Footer />\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}